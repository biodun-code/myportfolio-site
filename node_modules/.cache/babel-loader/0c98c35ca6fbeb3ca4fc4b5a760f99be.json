{"ast":null,"code":"var _jsxFileName = \"/home/biodun/myportfolio-site/src/components/pages/AllProjects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Project from '../common/Project';\nimport Splitter from '../common/Splitter';\nimport projects from '../../data/projects.json';\nimport Para from '../common/Para';\nimport '../styles/AllProjects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllProjects = () => {\n  _s();\n\n  let all = [...new Set(projects.map(project => project.cat))];\n  let [category, setCategory] = useState('');\n  let [sorting, setSorting] = useState({\n    a: 1,\n    b: -1\n  });\n\n  const sortBy = (a, b) => Number(a.intro.replace(/^\\D+/g, '')) < Number(b.intro.replace(/^\\D+/g, '')) ? sorting.a : sorting.b;\n\n  const onCategoryChange = cat => {\n    setCategory(cat);\n  };\n\n  useEffect(() => {}, [sorting]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleWraper\",\n      children: /*#__PURE__*/_jsxDEV(Para, {\n        title: 'All Projects',\n        btnClass: '',\n        para: 'All Projects have their open source on github which can be simply review when clicking read more on each project.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: filterProjects,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: filterProjects.bar,\n        className: \"bar\",\n        children: all.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onCategoryChange(cat),\n          style: filterProjects.cat,\n          className: `cat ${category === cat && cat}`,\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: sort,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn x s${sorting.a}`,\n          onClick: () => setSorting({\n            a: 1,\n            b: -1\n          }),\n          children: \"Newest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn x s${sorting.b}`,\n          onClick: () => setSorting({\n            a: -1,\n            b: 1\n          }),\n          children: \"Oldest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this), projects.filter(project => !category ? projects : project.cat === category).sort((a, b) => sortBy(a, b)).map(project => {\n      let {\n        intro,\n        title,\n        tools,\n        content,\n        btnclass,\n        btn,\n        icon,\n        flip,\n        pId,\n        link,\n        more\n      } = project;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Project, {\n          intro: intro,\n          title: title,\n          tools: tools,\n          content: content,\n          btnClass: btnclass,\n          btn: btn,\n          icon: icon,\n          id: pId,\n          flip: flip,\n          link: link,\n          more: more\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Splitter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this)]\n      }, pId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 1\n  }, this);\n};\n\n_s(AllProjects, \"7Z1JnOd4EGBMhK2yAc3aL0GTaVU=\");\n\n_c = AllProjects;\nconst filterProjects = {\n  display: 'flex',\n  justifyContent: 'center',\n  marginBottom: '25px',\n  bar: {\n    width: '65vw',\n    height: '50px',\n    display: 'flex',\n    borderRadius: '150px',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  cat: {\n    display: 'flex',\n    alignItems: 'center',\n    transition: '.3s all',\n    cursor: 'pointer'\n  }\n};\nconst sort = {\n  margin: '0px auto',\n  textAlign: 'center',\n  marginBottom: '35px'\n};\nexport default AllProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProjects\");","map":{"version":3,"sources":["/home/biodun/myportfolio-site/src/components/pages/AllProjects.js"],"names":["React","useEffect","useState","Project","Splitter","projects","Para","AllProjects","all","Set","map","project","cat","category","setCategory","sorting","setSorting","a","b","sortBy","Number","intro","replace","onCategoryChange","filterProjects","bar","sort","display","gap","filter","title","tools","content","btnclass","btn","icon","flip","pId","link","more","justifyContent","marginBottom","width","height","borderRadius","alignItems","transition","cursor","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Project from '../common/Project';\nimport Splitter from '../common/Splitter';\nimport projects from '../../data/projects.json'\nimport Para from '../common/Para';\nimport '../styles/AllProjects.css';\n\n\nconst AllProjects = () => { \n\nlet all = [...new Set(projects.map(project => project.cat))];\nlet [category,setCategory] = useState('')\nlet [sorting,setSorting] = useState({\n  a:1,\n  b:-1\n})\n\nconst sortBy = (a,b) => Number(a.intro.replace( /^\\D+/g, '')) < Number(b.intro.replace( /^\\D+/g, '')) ? sorting.a : sorting.b\n\nconst onCategoryChange = (cat) => {\n  setCategory(cat)\n}\n\n  useEffect(() => {\n},[sorting])\n\nreturn(\n\n<div className='Projects'>\n\n<div className=\"titleWraper\">\n<Para title={'All Projects'} btnClass={''} para={'All Projects have their open source on github which can be simply review when clicking read more on each project.'} />\n</div>\n\n<div style={filterProjects} >\n  <div style={filterProjects.bar} className=\"bar\" >\n  {all.map(cat => (\n    <div key={cat} onClick={() => onCategoryChange(cat)} style={filterProjects.cat} className={`cat ${category === cat && cat}`} >{cat}</div>\n  ))}\n  </div>\n</div>\n\n<div style={sort} >\n<div style={{display:'flex',gap:'5px'}}>\n<button  className={`btn x s${sorting.a}`} onClick={() => setSorting({a:1,b:-1})}>Newest</button>\n  <button className={`btn x s${sorting.b}`} onClick={() => setSorting({a:-1,b:1})}>Oldest</button>\n</div>\n</div>\n\n      {projects\n      .filter(project => !category ? projects : project.cat === category)\n      .sort((a,b) => sortBy(a,b))\n      .map(project => {\n          let {intro,title,tools,content,btnclass,btn,icon,flip,pId,link,more} = project\n                return(\n                  <div key={pId}>\n                  <Project intro={intro} title={title} tools={tools} content={content} btnClass={btnclass} btn={btn} icon={icon} id={pId} flip={flip} link={link} more={more} />\n                  <Splitter />\n                  </div>\n                )\n      })}\n</div>\n\n)\n}\n\nconst filterProjects = {\n  display: 'flex',\n  justifyContent: 'center',\n  marginBottom: '25px',\n  bar:{\n    width: '65vw',\n    height: '50px',\n    display: 'flex',\n    borderRadius: '150px',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  cat:{\n    display: 'flex',\n    alignItems: 'center',\n    transition: '.3s all',\n    cursor: 'pointer',\n  }\n}\n\nconst sort = {\n  margin: '0px auto',\n  textAlign: 'center',\n  marginBottom: '35px',\n\n}\n\nexport default AllProjects"]},"metadata":{},"sourceType":"module"}